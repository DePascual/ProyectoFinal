@model FitocracyFinal.ViewModels.EntrenamientoEntrenadoresVM
@using FitocracyFinal.ViewModels
@using FitocracyFinal.Models

<div class="text-center">
    <div class="row">
        <div class="col-lg-1"></div>
        <div class="col-lg-5 pull-left">
            <img src="~/Content/Imagenes/logo.png" style="float:left" />
            <p style="font-size:35px; line-height:28px; float:right">COACHING</p>
        </div>
    </div>

    <br />
    <div class="center" style="position:relative; background:url(../../Content/Imagenes/Portadas/portada.jpg); width:90%; height:480px">
        <div id="textoImg" style=" float:right">
            <h2 style="text-align:center; color:#FFF">2016 is Your Year</h2>
            <p style="color:#8A9599; text-align:center">Fit fitness into your life this year. Track your <br /> develop healthy habits, and reach your <br />goals with the help of our expert coaches.</p>
            <button id="buttonLogin" class="btn btn-primary btn-lg center" style="width:300px; float:right">Join Today</button>
        </div>
    </div>
    <hr />

    @Html.Partial("~/Views/PartialsViews/ServicesPV.cshtml")

    <!--ENTRENAMIENTOS-->
    <div class="row" style="background-color:#EFF1F3">

        <!--WEIGHT LOSS ROW-->
        <div class="col-lg-12" id="loss">
            <div class="col-lg-12 portada">
                <h3>Weight Loss</h3>
            </div>
            @{
                int contaWL = 0;
                foreach (var entr in Model.entrenamientosList.Where(x => x.Familia.Equals("Weight Loss")))
                {
                    if (contaWL <= 2)
                    {
                        EntrenamientoEntrenadoresVM vMDef = new EntrenamientoEntrenadoresVM(Model.entrenadoresList.Where(x => x._id == entr.Id_Entrenador).Select(x => x).FirstOrDefault(), entr);
                        <div class="col-lg-4">
                            @Html.Partial("~/Views/PartialsViews/EntrenamientoSmall.cshtml", vMDef)
                        </div>
                    }
                    contaWL++;
                }
            }
        </div>

        <!--MUSCLE GAIN ROW-->
        <div class="col-lg-12" id="muscle">
            <div class="col-lg-12 portada">
                <h3>Muscle Gain</h3>
            </div>
            @{
                int contaMG = 0;
                foreach (var entr in Model.entrenamientosList.Where(x => x.Familia.Equals("Muscle Gain")))
                {
                    if (contaMG <= 2)
                    {
                        EntrenamientoEntrenadoresVM vMDef = new EntrenamientoEntrenadoresVM(Model.entrenadoresList.Where(x => x._id == entr.Id_Entrenador).Select(x => x).FirstOrDefault(), entr);
                        <div class="col-lg-4">
                            @Html.Partial("~/Views/PartialsViews/EntrenamientoSmall.cshtml", vMDef)
                        </div>
                    }
                    contaMG++;
                }
            }
        </div>

        <!--ONE ON ONE ROW-->
        <div class="col-lg-12" id="muscle">
            <div class="col-lg-12 portada">
                <h3>One on one coaching</h3>
            </div>
            @{
                int contaO = 0;
                foreach (var entr in Model.entrenamientosList.Where(x => x.Familia.Equals("One")))
                {
                    if (contaO <= 2)
                    {
                        EntrenamientoEntrenadoresVM vMDef = new EntrenamientoEntrenadoresVM(Model.entrenadoresList.Where(x => x._id == entr.Id_Entrenador).Select(x => x).FirstOrDefault(), entr);
                        <div class="col-lg-4">
                            @Html.Partial("~/Views/PartialsViews/EntrenamientoSmall.cshtml", vMDef)
                        </div>
                    }
                    contaO++;
                }
            }
        </div>

    </div>


    <!--ENTRENADORES-->
    @{
        List<Entrenadores> entrenadores = Model.entrenadoresList;
        /*
        El carrusel estará compuesto por tres entrenadores por transición
        Para ver las transiciones que necesitamos:
            1- Dividir entre 3  => Número completo de sliders
            2- Tener en cuenta el resto =>
                Si es = 0 => El último slider está completo
                Si es > 0 => Se añade un slider, donde habrá tantos entrenadores, como el resto indique
        */

        int slidersCompletos = entrenadores.Count() / 3; // 8 / 3 = 2
        int restoSlider = entrenadores.Count() % 3; // 8 % 3 = 2
        int slidersTotal = restoSlider > 0 ? slidersCompletos + 1 : slidersCompletos; // 2 > 0 => slidersCompletos = 3
    }

    <div class="container" style="background:#293440; color:#fff">
        <h2 style="text-align:center">Meet the Coaches</h2>
        <div id="carouselCoaches" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                @{
                    for (int i = 0; i < entrenadores.Count(); i++)
                    {
                        if (i == 0)
                        {
                            <div class="item active">
                                <div class="row">
                                    <div class="col-lg-6 center">
                                        <img src='@Url.Action( "showEntrenador", "Fotos", new { id = entrenadores[i]._id})' height="300" width="300" />
                                    </div>
                                    <div class="col-lg-6 center">
                                        <h3>@entrenadores[i].Nombre</h3>
                                        <p>@entrenadores[i].Descripcion</p>
                                    </div>
                                </div>
                           </div>
                        }
                        else
                        {
                            <div class="item">
                                <div class="row">
                                    <div class="col-lg-6 center">
                                        <img src='@Url.Action( "showEntrenador", "Fotos", new { id = entrenadores[i]._id})' height="300" width="300" />
                                    </div>
                                    <div class="col-lg-6 center">
                                        <h3>@entrenadores[i].Nombre</h3>
                                        <p>@entrenadores[i].Descripcion</p>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>

            <!-- Controls -->
            <a class="left carousel-control" href="#carouselCoaches" role="button" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left"></span>
            </a>
            <a class="right carousel-control" href="#carouselCoaches" role="button" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right"></span>
            </a>

        </div>
    </div>

</div>








@*<div class="container" style="background:#293440; color:#fff" data-ng-controller="entrenadoresCtrl">
        <div style="height: 305px">
            <uib-carousel active="active" interval="myInterval" no-wrap="noWrapSlides">
                <uib-slide ng-repeat="slide in slides track by slide._id" index="slide._id">
                    <img ng-src='@Url.Action("showEntrenador", "Fotos")/{{slides[0]._id}}' height="300" width="300" style="margin:auto" />
                    <div class="carousel-caption">
                        <h4>Slide {{slide._id}}</h4>
                        <p>{{slide.Nombre}}</p>
                    </div>
                </uib-slide>
            </uib-carousel>
        </div>
    </div>*@






